{"version":3,"sources":["images/logo.svg","images/phone.svg","images/mail.svg","components/nav/Nav.js","components/header/Header.js","utils/api.js","utils/dictionary.js","components/slider/Slider.js","components/footer/Footer.js","components/home/Home.js","components/banner/Banner.js","components/description/Description.js","components/meta/Meta.js","components/category/Category.js","components/gallery/Gallery.js","components/cta/Cta.js","components/product/Product.js","components/subpage/Subpage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Nav","categories","className","map","cat","key","to","Link","activeClassName","title","Name","alt","Header","useState","scrolled","setScrolled","window","addEventListener","pageYOffset","Container","src","logo","API","GETTERS","products","pages","socials","contact","LANG","pl","seeMore","en","Slider","name","desc","img","link","Lang","length","substring","Footer","social","href","target","rel","page","Home","index","setIndex","Carousel","activeIndex","onSelect","selectedIndex","e","CAT","Item","Summary","Photo","url","Banner","element","photos","PHOTOS","Array","isArray","alternativeText","Description","source","escapeHtml","Meta","description","image","imageAlt","Category","category","pageTitle","formats","medium","product","Photos","Gallery","photo","data-attribute","small","Cta","Exhortation_text","Email","Phone","Product","console","log","Subpage","subpage","App","setCat","setProducts","setPages","setSocials","setContact","getData","LINK","SETTER","fetch","then","response","json","data","useEffect","Title","path","exact","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.82bdd994.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.e881c64b.svg\";","module.exports = __webpack_public_path__ + \"static/media/phone.e6ba86c0.svg\";","module.exports = __webpack_public_path__ + \"static/media/mail.8c231b15.svg\";","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n\r\nconst Nav = ({ categories }) => {\r\n    return (\r\n        <nav className=\"nav\">\r\n            {categories.map((cat, key) =>\r\n                <NavLink to={cat.Link} className=\"link\" activeClassName='active' title={cat.Name} alt={cat.Name} key={key}>{cat.Name}</NavLink>\r\n            )}\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Nav;","import React, { useState } from 'react';\r\nimport Nav from \"../nav/Nav\";\r\nimport { Container } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\nimport logo from \"../../images/logo.svg\";\r\n\r\n\r\nconst Header = ({ categories }) => {\r\n\r\n    const [scrolled, setScrolled] = useState(\"\");\r\n    window.addEventListener(\"scroll\", () => setScrolled(window.pageYOffset > 0 ? \" scrolled\" : \"\"));\r\n\r\n    return (\r\n        <header className={`header${scrolled}`}>\r\n            <Container>\r\n                <Link to=\"/\"><img src={logo} alt=\"Pościel z Pasją\" title=\"Pościel z pasją\" className=\"header__logo\" /></Link>\r\n                <Nav categories={categories} />\r\n            </Container>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","const API = \"http://192.168.1.10:1337\";\r\nconst GETTERS = {\r\n  categories: `${API}/categories`,\r\n  products: `${API}/products`,\r\n  pages: `${API}/pages`,\r\n  socials: `${API}/socials`,\r\n  contact: `${API}/contact`,\r\n};\r\n\r\nexport { API, GETTERS };\r\n","const LANG = {\r\n    pl: {\r\n        seeMore: \"Zobacz więcej\"\r\n    },\r\n    en: {\r\n        seeMore: \"Checkout\"\r\n    }\r\n}\r\n\r\nexport default LANG;","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport LANG from \"../../utils/dictionary\";\r\n\r\nconst Slider = ({ name, desc, img, link }) => {\r\n  const Lang = LANG[\"pl\"];\r\n\r\n  if (desc && desc.length > 120) desc = desc.substring(0, 120) + \"...\";\r\n\r\n  return (\r\n    <article className=\"slider\">\r\n      {img.length > 0 ? (\r\n        <figure className=\"slider__img\">\r\n          <img src={img} alt={name} title={name} />\r\n        </figure>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n\r\n      <Container>\r\n        <h1>{name}</h1>\r\n        {desc ? <p className=\"main-text-1\">{desc}</p> : \"\"}\r\n        <Link to={link} className=\"link\" title={name} alt={name}>\r\n          {Lang.seeMore}\r\n        </Link>\r\n      </Container>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default Slider;\r\n","import React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Footer = ({ pages, socials }) => {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <Container>\r\n                <section>\r\n                    {socials.map((social, key) =>\r\n                        <a href={social.Link} target=\"_blank\" rel=\"noopener noreferrer\" className=\"link\" title={social.Name} alt={social.Name} key={key}>{social.Name}</a>\r\n                    )}\r\n                </section>\r\n                <section>\r\n                    {pages.map((page, key) =>\r\n                        <Link to={page.Link} className=\"link\" title={page.Name} alt={page.Name} key={key}>{page.Name}</Link>\r\n                    )}\r\n                </section>\r\n            </Container>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React, { useState } from \"react\";\r\nimport { API } from \"../../utils/api\";\r\nimport Slider from \"../slider/Slider\";\r\nimport Carousel from \"react-bootstrap/Carousel\";\r\nimport Footer from \"../footer/Footer\";\r\n\r\nconst Home = ({ pages, socials, categories }) => {\r\n  const [index, setIndex] = useState(0);\r\n\r\n  const handleSelect = (selectedIndex, e) => {\r\n    setIndex(selectedIndex);\r\n  };\r\n\r\n  return (\r\n    <section className=\"home\">\r\n      <section className=\"home__top\">\r\n        <Carousel activeIndex={index} onSelect={handleSelect}>\r\n          {categories.map((CAT, key) => (\r\n            <Carousel.Item key={key}>\r\n              <Slider\r\n                name={CAT.Name}\r\n                desc={CAT.Summary}\r\n                img={`${API}${CAT.Photo.url}`}\r\n                link={CAT.Link}\r\n              />\r\n            </Carousel.Item>\r\n          ))}\r\n        </Carousel>\r\n      </section>\r\n      <section className=\"home__bottom\">\r\n        <Footer pages={pages} socials={socials} />\r\n      </section>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { API } from \"../../utils/api\";\r\n\r\nconst Banner = ({ element, photos }) => {\r\n  const PHOTOS = Array.isArray(photos) ? photos : [photos];\r\n\r\n  return (\r\n    <section className=\"banner\">\r\n      {PHOTOS[0] ? (\r\n        <figure className=\"banner--img\">\r\n          <img\r\n            src={`${API}${PHOTOS[0].url}`}\r\n            alt={PHOTOS[0].alternativeText}\r\n            title={PHOTOS[0].alternativeText}\r\n          />\r\n        </figure>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <Container>\r\n        <h1>{element.Name}</h1>\r\n      </Container>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Banner;\r\n","import React from 'react';\r\nimport ReactMarkdown from \"react-markdown/with-html\";\r\n\r\nconst Description = ({ desc }) => {\r\n    return (\r\n        <ReactMarkdown\r\n            source={desc}\r\n            escapeHtml={false}\r\n        />\r\n    );\r\n}\r\n\r\nexport default Description;","import React from \"react\";\r\n// import { API } from \"../../utils/api\";\r\n// import { Helmet } from \"react-helmet\";\r\n\r\nconst Meta = ({ title, description, image, imageAlt }) => {\r\n  return (\r\n    <h1></h1>\r\n    // <Helmet>\r\n    //   <title>{title}</title>\r\n    //   {/* <meta name=\"description\" content={description} /> */}\r\n    //   <meta property=\"og:title\" content={title} />\r\n    //   {/* <meta property=\"og:description\" content={description} /> */}\r\n    //   <meta property=\"og:image\" content={`${API}${image}`} />\r\n    //   <meta property=\"og:image:width\" content=\"640\" />\r\n    //   <meta property=\"og:image:height\" content=\"385\" />\r\n    //   <meta property=\"og:image:alt\" content={imageAlt} />\r\n    //   <meta property=\"og:locale\" content=\"pl_PL\" />\r\n    //   <meta property=\"og:type\" content=\"website\" />\r\n    //   <meta property=\"og:url\" content={window.location.href} />\r\n    // </Helmet>\r\n  );\r\n};\r\n\r\nexport default Meta;\r\n","import React from \"react\";\r\nimport Footer from \"../footer/Footer\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport { API } from \"../../utils/api\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Banner from \"../banner/Banner\";\r\nimport Description from \"../description/Description\";\r\nimport Meta from \"../meta/Meta\";\r\n\r\nconst Category = ({ category, products, pages, socials, pageTitle }) => {\r\n  return (\r\n    <main className=\"category\">\r\n      <Meta\r\n        title={`${category.Name} - ${pageTitle}`}\r\n        description={category.Description ? category.Description : \"\"}\r\n        image={category.Photo ? category.Photo.formats.medium.url : \"\"}\r\n        imageAlt={category.Photo ? category.Photo.alternativeText : \"\"}\r\n      />\r\n      <Banner element={category} photos={category.Photo} />\r\n      <Container>\r\n        <section className=\"category__desc\">\r\n          {category.Description ? (\r\n            <Description desc={category.Description} />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </section>\r\n        <section className=\"category__products\">\r\n          {products.map((product, key) => (\r\n            <section className=\"category-product\" key={key}>\r\n              <Link to={product.Link} alt={product.Name} title={product.Name}>\r\n                <figure className=\"category-product__img\">\r\n                  {product.Photos[0] ? (\r\n                    <img\r\n                      src={`${API}${product.Photos[0].url}`}\r\n                      alt={product.Photos[0].alternativeText}\r\n                      title={product.Photos[0].alternativeText}\r\n                    />\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </figure>\r\n                <section className=\"category-product__desc\">\r\n                  <h2>{product.Name}</h2>\r\n                </section>\r\n              </Link>\r\n            </section>\r\n          ))}\r\n        </section>\r\n      </Container>\r\n      <Footer pages={pages} socials={socials} />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Category;\r\n","import React from \"react\";\r\nimport { API } from \"../../utils/api\";\r\nimport SimpleReactLightbox, { SRLWrapper } from \"simple-react-lightbox\";\r\n\r\nconst Gallery = ({ photos }) => {\r\n  return (\r\n    <section className=\"gallery\">\r\n      <SimpleReactLightbox>\r\n        <SRLWrapper>\r\n          {photos.map((photo, key) => (\r\n            <a\r\n              href={`${API}${photo.url}`}\r\n              className=\"gallery--img\"\r\n              key={key}\r\n              data-attribute=\"SRL\"\r\n              alt={photo.alternativeText}\r\n              title={photo.alternativeText}\r\n            >\r\n              <div className=\"cover\"></div>\r\n              <img\r\n                src={`${API}${photo.formats.small.url}`}\r\n                alt={photo.alternativeText}\r\n                title={photo.alternativeText}\r\n              />\r\n            </a>\r\n          ))}\r\n        </SRLWrapper>\r\n      </SimpleReactLightbox>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Gallery;\r\n","import React from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport Phone from \"../../images/phone.svg\";\r\nimport Email from \"../../images/mail.svg\";\r\n\r\nconst Cta = ({ contact }) => {\r\n  return (\r\n    <section className=\"cta\">\r\n      <Container>\r\n        <section className=\"cta__wrapper\">\r\n          <section className=\"cta__wrapper--left\">\r\n            {contact.Exhortation_text ? (\r\n              <h1>{contact.Exhortation_text}</h1>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </section>\r\n          <section className=\"cta__wrapper--right\">\r\n            {contact.Email ? (\r\n              <a\r\n                className=\"link\"\r\n                href={`mailto:${contact.Email}`}\r\n                title={contact.Email}\r\n                alt={contact.Email}\r\n              >\r\n                <img src={Email} alt={contact.Email} title={contact.Email} />\r\n                <span>{contact.Email}</span>\r\n              </a>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            {contact.Phone ? (\r\n              <a\r\n                className=\"link\"\r\n                href={`tel:${contact.Phone}`}\r\n                title={contact.Phone}\r\n                alt={contact.Phone}\r\n              >\r\n                <img src={Phone} alt={contact.Phone} title={contact.Phone} />\r\n                <span>{`+48 ${contact.Phone}`}</span>\r\n              </a>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n          </section>\r\n        </section>\r\n      </Container>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Cta;\r\n","import React from \"react\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport Footer from \"../footer/Footer\";\r\nimport Banner from \"../banner/Banner\";\r\nimport Description from \"../description/Description\";\r\nimport Gallery from \"../gallery/Gallery\";\r\nimport Cta from \"../cta/Cta\";\r\nimport Meta from \"../meta/Meta\";\r\n\r\nconst Product = ({ product, pages, socials, contact, pageTitle }) => {\r\n  console.log(product);\r\n  return (\r\n    <main className=\"product\">\r\n      <Meta\r\n        title={`${product.Name} - ${pageTitle}`}\r\n        description={product.Description ? product.Description : \"\"}\r\n        image={product.Photos[0] ? product.Photos[0].formats.medium.url : \"\"}\r\n        imageAlt={product.Photos[0] ? product.Photos[0].alternativeText : \"\"}\r\n      />\r\n      <Banner element={product} photos={product.Photos} />\r\n      <Container>\r\n        <section className=\"product__desc\">\r\n          {product.Description ? (\r\n            <Description desc={product.Description} />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </section>\r\n        <Gallery photos={product.Photos} />\r\n        <Cta contact={contact} />\r\n      </Container>\r\n      <Footer pages={pages} socials={socials} />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","import React from \"react\";\r\nimport Banner from \"../banner/Banner\";\r\nimport Footer from \"../footer/Footer\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport Description from \"../description/Description\";\r\nimport Meta from \"../meta/Meta\";\r\n\r\nconst Subpage = ({ subpage, pages, socials, pageTitle }) => {\r\n  return (\r\n    <main className=\"subpage\">\r\n      <Meta\r\n        title={`${subpage.Name} - ${pageTitle}`}\r\n        description={subpage.Description ? subpage.Description : \"\"}\r\n        image={subpage.Photo ? subpage.Photo.formats.medium.url : \"\"}\r\n        imageAlt={subpage.Photo ? subpage.Photo.alternativeText : \"\"}\r\n      />\r\n      <Banner element={subpage} />\r\n      <Container>\r\n        <section className=\"subpage__desc\">\r\n          {subpage.Description ? (\r\n            <Description desc={subpage.Description} />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </section>\r\n      </Container>\r\n      <Footer pages={pages} socials={socials} />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Subpage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./css/app.scss\";\r\nimport Header from \"./components/header/Header\";\r\nimport Home from \"./components/home/Home\";\r\nimport Category from \"./components/category/Category\";\r\nimport Product from \"./components/product/Product\";\r\nimport Subpage from \"./components/subpage/Subpage\";\r\nimport Meta from \"./components/meta/Meta\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { GETTERS } from \"./utils/api\";\r\n\r\nfunction App() {\r\n  const [cat, setCat] = useState([]);\r\n  const [products, setProducts] = useState([]);\r\n  const [pages, setPages] = useState([]);\r\n  const [socials, setSocials] = useState([]);\r\n  const [contact, setContact] = useState([]);\r\n  const getData = (LINK, SETTER) => {\r\n    fetch(LINK)\r\n      .then((response) => response.json())\r\n      .then((data) => SETTER(data));\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData(GETTERS.categories, setCat);\r\n    getData(GETTERS.products, setProducts);\r\n    getData(GETTERS.pages, setPages);\r\n    getData(GETTERS.socials, setSocials);\r\n    getData(GETTERS.contact, setContact);\r\n  }, []);\r\n\r\n  return (\r\n    <section className=\"app\">\r\n      <Meta title={contact.Title} />\r\n      <Router>\r\n        <Header categories={cat} />\r\n        <Switch>\r\n          <Route path=\"/\" exact>\r\n            <Home pages={pages} socials={socials} categories={cat} />\r\n          </Route>\r\n          {pages.map((page, key) => (\r\n            <Route path={`/${page.Link}`} key={key}>\r\n              <Subpage\r\n                subpage={page}\r\n                pages={pages}\r\n                socials={socials}\r\n                pageTitle={contact.Title}\r\n              />\r\n            </Route>\r\n          ))}\r\n          {cat.map((CAT, key) => (\r\n            <Route path={`/${CAT.Link}`} key={key}>\r\n              <Category\r\n                category={CAT}\r\n                products={CAT.products}\r\n                pages={pages}\r\n                socials={socials}\r\n                pageTitle={contact.Title}\r\n              />\r\n            </Route>\r\n          ))}\r\n          {products.map((product, key) => (\r\n            <Route path={`/${product.Link}`} key={key}>\r\n              <Product\r\n                product={product}\r\n                pages={pages}\r\n                socials={socials}\r\n                contact={contact}\r\n                pageTitle={contact.Title}\r\n              />\r\n            </Route>\r\n          ))}\r\n        </Switch>\r\n      </Router>\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}